// <auto-generated />
using System;
using SisMedico.InfraData.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SisMedico.InfraData.Migrations;

[DbContext(typeof(ITDeveloperDbContext))]
[Migration("20210601001633_AddFieldMotivoInPaciente")]
partial class AddFieldMotivoInPaciente
{
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "3.1.0")
            .HasAnnotation("Relational:MaxIdentifierLength", 128)
            .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

        modelBuilder.Entity("SisMedico.Domain.Entities.Author", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("EmailAddress")
                    .HasColumnName("EmailAddress")
                    .HasColumnType("varchar(255)")
                    .HasMaxLength(255);

                b.Property<string>("LastName")
                    .HasColumnName("LastName")
                    .HasColumnType("varchar(70)")
                    .HasMaxLength(70);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnName("Name")
                    .HasColumnType("varchar(50)")
                    .HasMaxLength(50);

                b.Property<string>("WebSite")
                    .HasColumnName("WebSite")
                    .HasColumnType("varchar(500)")
                    .HasMaxLength(255);

                b.HasKey("Id");

                b.ToTable("Author");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Cid", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("CidInternalId")
                    .HasColumnName("CidInternalId")
                    .HasColumnType("int");

                b.Property<string>("Codigo")
                    .IsRequired()
                    .HasColumnName("Codigo")
                    .HasColumnType("varchar(6)")
                    .HasMaxLength(6);

                b.Property<string>("Diagnostico")
                    .IsRequired()
                    .HasColumnName("Diagnostico")
                    .HasColumnType("nvarchar(4000)")
                    .HasMaxLength(4000);

                b.HasKey("Id");

                b.ToTable("Cid");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.EstadoPaciente", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasColumnName("Descricao")
                    .HasColumnType("varchar(30)")
                    .HasMaxLength(20);

                b.HasKey("Id");

                b.ToTable("EstadoPaciente");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Generico", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("Codigo")
                    .HasColumnType("int");

                b.Property<string>("Nome")
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.ToTable("Generico");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.MasterDetails.Team", b =>
            {
                b.Property<int>("TeamID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Description")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Name")
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(500);

                b.HasKey("TeamID");

                b.ToTable("Teams");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.MasterDetails.TeamMember", b =>
            {
                b.Property<int>("TeamMemberID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Email")
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(500);

                b.Property<string>("Name")
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(500);

                b.Property<int>("TeamID")
                    .HasColumnType("int");

                b.HasKey("TeamMemberID");

                b.HasIndex("TeamID");

                b.ToTable("TeamMembers");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Medicamento", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("Codigo")
                    .HasColumnType("int");

                b.Property<int>("CodigoGenerico")
                    .HasColumnType("int");

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasColumnName("Descricao")
                    .HasColumnType("nvarchar(4000)")
                    .HasMaxLength(4000);

                b.Property<string>("Generico")
                    .IsRequired()
                    .HasColumnName("Generico")
                    .HasColumnType("nvarchar(4000)")
                    .HasMaxLength(4000);

                b.HasKey("Id");

                b.ToTable("Medicamento");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Mural", b =>
            {
                b.Property<int>("MuralId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Autor")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Aviso")
                    .HasColumnType("varchar(90)");

                b.Property<DateTime>("Data")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Titulo")
                    .HasColumnType("varchar(90)");

                b.HasKey("MuralId");

                b.ToTable("Mural");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Triagem", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("CodigoPaciente")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("DataNotificacao")
                    .HasColumnType("datetime2");

                b.Property<string>("Mensagem")
                    .IsRequired()
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(90);

                b.Property<string>("Motivo")
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(30);

                b.Property<string>("NomePaciente")
                    .IsRequired()
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(90);

                b.HasKey("Id");

                b.ToTable("Triagem");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Paciente", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("Ativo")
                    .HasColumnType("bit");

                b.Property<string>("Cpf")
                    .HasColumnName("Cpf")
                    .HasColumnType("varchar(11)")
                    .IsFixedLength(true)
                    .HasMaxLength(11);

                b.Property<DateTime>("DataInternacao")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DataNascimento")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .HasColumnName("Email")
                    .HasColumnType("varchar(150)");

                b.Property<Guid>("EstadoPacienteId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Motivo")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnName("Nome")
                    .HasColumnType("varchar(80)");

                b.Property<string>("Rg")
                    .HasColumnName("Rg")
                    .HasColumnType("varchar(15)")
                    .HasMaxLength(15);

                b.Property<DateTime>("RgDataEmissao")
                    .HasColumnType("datetime2");

                b.Property<string>("RgOrgao")
                    .HasColumnName("RgOrgao")
                    .HasColumnType("varchar(10)");

                b.Property<int>("Sexo")
                    .HasColumnType("int");

                b.Property<int>("TipoDeCliente")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("EstadoPacienteId");

                b.ToTable("Paciente");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Tags", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("AuthorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Note")
                    .HasColumnName("Note")
                    .HasColumnType("nvarchar(MAX)");

                b.Property<string>("SourceAt")
                    .IsRequired()
                    .HasColumnName("SourceAt")
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(1500);

                b.Property<string>("Tag")
                    .IsRequired()
                    .HasColumnName("Tag")
                    .HasColumnType("varchar(90)")
                    .HasMaxLength(90);

                b.HasKey("Id");

                b.HasIndex("AuthorId");

                b.ToTable("Tags");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Telefone", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("AuthorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Ddd")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Numero")
                    .HasColumnType("varchar(90)");

                b.Property<int>("TipoTelefone")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("AuthorId");

                b.ToTable("Telefone");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Author", b =>
            {
                b.OwnsOne("SisMedico.Domain.ValueObjects.RedesSociais", "RedesSociais", b1 =>
                    {
                        b1.Property<Guid>("AuthorId")
                            .HasColumnType("uniqueidentifier");

                        b1.Property<string>("Facebook")
                            .HasColumnName("Facebook")
                            .HasColumnType("varchar(400)")
                            .HasMaxLength(400);

                        b1.Property<string>("Linkedin")
                            .HasColumnName("Linkedin")
                            .HasColumnType("varchar(400)")
                            .HasMaxLength(400);

                        b1.Property<string>("Twitter")
                            .HasColumnName("Twitter")
                            .HasColumnType("varchar(400)")
                            .HasMaxLength(400);

                        b1.HasKey("AuthorId");

                        b1.ToTable("Author");

                        b1.WithOwner()
                            .HasForeignKey("AuthorId");
                    });
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.MasterDetails.TeamMember", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.MasterDetails.Team", null)
                    .WithMany("Members")
                    .HasForeignKey("TeamID")
                    .OnDelete(DeleteBehavior.ClientNoAction)
                    .IsRequired();
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Paciente", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.EstadoPaciente", "EstadoPaciente")
                    .WithMany("Paciente")
                    .HasForeignKey("EstadoPacienteId")
                    .OnDelete(DeleteBehavior.ClientNoAction)
                    .IsRequired();
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Tags", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.Author", "Author")
                    .WithMany("Tags")
                    .HasForeignKey("AuthorId")
                    .OnDelete(DeleteBehavior.ClientNoAction)
                    .IsRequired();
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Telefone", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.Author", "Author")
                    .WithMany("Telefone")
                    .HasForeignKey("AuthorId")
                    .OnDelete(DeleteBehavior.ClientNoAction)
                    .IsRequired();
            });
#pragma warning restore 612, 618
    }
}
