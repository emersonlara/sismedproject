// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisMedico.InfraData.ORM;

#nullable disable

namespace SisMedico.InfraData.Migrations;

[DbContext(typeof(ITDeveloperDbContext))]
[Migration("20240207161306_AddLawyerEvent")]
partial class AddLawyerEvent
{
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.9")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

        modelBuilder.Entity("EspecialidadeMedico", b =>
            {
                b.Property<Guid>("EspecialidadeId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("MedicoId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("EspecialidadeId", "MedicoId");

                b.HasIndex("MedicoId");

                b.ToTable("EspecialidadeMedico");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Agendamento", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Comentario")
                    .HasColumnType("varchar(90)");

                b.Property<Guid>("ConvenioId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("DataAgendamento")
                    .HasColumnType("datetime2");

                b.Property<int>("LocalExame")
                    .HasColumnType("int");

                b.Property<Guid>("MedicoId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("PacienteId")
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("TipoExame")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("MedicoId");

                b.HasIndex("PacienteId");

                b.ToTable("Agendamento");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Author", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("EmailAddress")
                    .HasMaxLength(255)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("EmailAddress");

                b.Property<string>("LastName")
                    .HasMaxLength(70)
                    .HasColumnType("varchar(70)")
                    .HasColumnName("LastName");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("varchar(50)")
                    .HasColumnName("Name");

                b.Property<string>("WebSite")
                    .HasMaxLength(255)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("WebSite");

                b.HasKey("Id");

                b.ToTable("Author", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.ChamadaMedica", b =>
            {
                b.Property<int>("ChamadaMedicoId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChamadaMedicoId"), 1L, 1);

                b.Property<DateTime>("DataChamada")
                    .HasColumnType("datetime2");

                b.Property<string>("Leito")
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnType("varchar(10)");

                b.Property<string>("Medico")
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnType("varchar(80)");

                b.Property<string>("Mensagem")
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnType("varchar(150)");

                b.HasKey("ChamadaMedicoId");

                b.ToTable("ChamadaMedica");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Cid", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("CidInternalId")
                    .HasColumnType("int")
                    .HasColumnName("CidInternalId");

                b.Property<string>("Codigo")
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnType("varchar(6)")
                    .HasColumnName("Codigo");

                b.Property<string>("Diagnostico")
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnType("nvarchar(4000)")
                    .HasColumnName("Diagnostico");

                b.HasKey("Id");

                b.ToTable("Cid", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Convenio", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Nome")
                    .HasColumnType("varchar(90)");

                b.Property<Guid>("PacienteId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Validade")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Convenio");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Especialidade", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Descricao")
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.ToTable("Especialidade");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.EstadoPaciente", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnType("varchar(20)")
                    .HasColumnName("Descricao");

                b.HasKey("Id");

                b.ToTable("EstadoPaciente", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Generico", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("Codigo")
                    .HasColumnType("int");

                b.Property<string>("Nome")
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.ToTable("Generico");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Medicamento", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("Codigo")
                    .HasColumnType("int");

                b.Property<int>("CodigoGenerico")
                    .HasColumnType("int");

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnType("nvarchar(4000)")
                    .HasColumnName("Descricao");

                b.Property<string>("Generico")
                    .IsRequired()
                    .HasMaxLength(4000)
                    .HasColumnType("nvarchar(4000)")
                    .HasColumnName("Generico");

                b.HasKey("Id");

                b.ToTable("Medicamento", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Medico", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Crm")
                    .HasColumnType("varchar(90)");

                b.Property<DateTime>("DataNascimento")
                    .HasColumnType("datetime2");

                b.Property<string>("Nome")
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.ToTable("Medico");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Mural", b =>
            {
                b.Property<int>("MuralId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MuralId"), 1L, 1);

                b.Property<string>("Autor")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Aviso")
                    .HasColumnType("varchar(90)");

                b.Property<DateTime>("Data")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Titulo")
                    .HasColumnType("varchar(90)");

                b.HasKey("MuralId");

                b.ToTable("Mural");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Paciente", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("Ativo")
                    .HasColumnType("bit");

                b.Property<string>("Cpf")
                    .HasMaxLength(11)
                    .HasColumnType("varchar(11)")
                    .HasColumnName("Cpf")
                    .IsFixedLength();

                b.Property<DateTime>("DataInternacao")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DataNascimento")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .HasColumnType("varchar(150)")
                    .HasColumnName("Email");

                b.Property<Guid>("EstadoPacienteId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Motivo")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(80)")
                    .HasColumnName("Nome");

                b.Property<string>("Rg")
                    .HasMaxLength(15)
                    .HasColumnType("varchar(15)")
                    .HasColumnName("Rg");

                b.Property<DateTime>("RgDataEmissao")
                    .HasColumnType("datetime2");

                b.Property<string>("RgOrgao")
                    .HasColumnType("varchar(10)")
                    .HasColumnName("RgOrgao");

                b.Property<int>("Sexo")
                    .HasColumnType("int");

                b.Property<int>("TipoDeCliente")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("EstadoPacienteId");

                b.ToTable("Paciente", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.PacienteTeste", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("adate")
                    .HasColumnType("datetime2");

                b.Property<decimal>("balance")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("ipAddress")
                    .HasColumnType("varchar(90)");

                b.Property<string>("package")
                    .HasColumnType("varchar(90)");

                b.Property<int>("port")
                    .HasColumnType("int");

                b.Property<string>("status")
                    .HasColumnType("varchar(90)");

                b.Property<string>("user")
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.ToTable("PacienteTestes");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Tags", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("AuthorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Note")
                    .HasColumnType("nvarchar(MAX)")
                    .HasColumnName("Note");

                b.Property<string>("SourceAt")
                    .IsRequired()
                    .HasColumnType("nvarchar(MAX)")
                    .HasColumnName("SourceAt");

                b.Property<string>("Tag")
                    .IsRequired()
                    .HasMaxLength(90)
                    .HasColumnType("varchar(90)")
                    .HasColumnName("Tag");

                b.HasKey("Id");

                b.HasIndex("AuthorId");

                b.ToTable("Tags", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Telefone", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("DDD")
                    .HasColumnType("varchar(90)");

                b.Property<string>("Numero")
                    .HasColumnType("varchar(90)");

                b.Property<int>("TipoTelefone")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Telefone");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Triagem", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("CodigoPaciente")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("DataNotificacao")
                    .HasColumnType("datetime2");

                b.Property<string>("Mensagem")
                    .IsRequired()
                    .HasMaxLength(90)
                    .HasColumnType("varchar(90)");

                b.Property<string>("NomePaciente")
                    .IsRequired()
                    .HasMaxLength(90)
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.ToTable("Triagem");
            });

        modelBuilder.Entity("SisMedico.Domain.Farmacia.Entities.Endereco", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Bairro")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<string>("Cep")
                    .IsRequired()
                    .HasColumnType("varchar(8)");

                b.Property<string>("Cidade")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<string>("Complemento")
                    .HasColumnType("varchar(250)");

                b.Property<string>("Estado")
                    .IsRequired()
                    .HasColumnType("varchar(50)");

                b.Property<Guid>("FornecedorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Logradouro")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.Property<string>("Numero")
                    .IsRequired()
                    .HasColumnType("varchar(50)");

                b.HasKey("Id");

                b.HasIndex("FornecedorId")
                    .IsUnique();

                b.ToTable("Enderecos", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Farmacia.Entities.Fornecedor", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("Ativo")
                    .HasColumnType("bit");

                b.Property<string>("Documento")
                    .IsRequired()
                    .HasColumnType("varchar(14)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.Property<int>("TipoFornecedor")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Fornecedores", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.Farmacia.Entities.Produto", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("Ativo")
                    .HasColumnType("bit");

                b.Property<DateTime>("DataCadastro")
                    .HasColumnType("datetime2");

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasColumnType("varchar(1000)");

                b.Property<Guid>("FornecedorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Imagem")
                    .IsRequired()
                    .HasColumnType("varchar(100)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.Property<decimal>("Valor")
                    .HasColumnType("decimal(18,2)");

                b.HasKey("Id");

                b.HasIndex("FornecedorId");

                b.ToTable("Produtos", (string)null);
            });

        modelBuilder.Entity("SisMedico.Domain.LawyerFolder.Lawyer", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("DateCreated")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DateModified")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DateOfBirth")
                    .HasColumnType("datetime2");

                b.Property<string>("EmailAddres")
                    .IsRequired()
                    .HasColumnType("varchar(90)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("varchar(90)");

                b.Property<decimal>("Hourly_rate")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("varchar(90)");

                b.Property<string>("PhoneNumber")
                    .HasColumnType("varchar(90)");

                b.Property<int>("Qualications")
                    .HasColumnType("int");

                b.Property<int>("Speciality")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Lawyers");
            });

        modelBuilder.Entity("SisMedico.Domain.LawyerFolder.LawyerEvent", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<bool>("AllDay")
                    .HasColumnType("bit");

                b.Property<string>("Color")
                    .HasColumnType("varchar(90)");

                b.Property<DateTime>("DateCreated")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DateModified")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .HasColumnType("varchar(90)");

                b.Property<DateTime?>("End")
                    .HasColumnType("datetime2");

                b.Property<int>("LawyerId")
                    .HasColumnType("int");

                b.Property<DateTime>("Start")
                    .HasColumnType("datetime2");

                b.Property<string>("Title")
                    .HasColumnType("varchar(90)");

                b.HasKey("Id");

                b.HasIndex("LawyerId");

                b.ToTable("LawyerEvent");
            });

        modelBuilder.Entity("EspecialidadeMedico", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.Especialidade", null)
                    .WithMany()
                    .HasForeignKey("EspecialidadeId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.HasOne("SisMedico.Domain.Entities.Medico", null)
                    .WithMany()
                    .HasForeignKey("MedicoId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Agendamento", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.Medico", "Medico")
                    .WithMany()
                    .HasForeignKey("MedicoId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.HasOne("SisMedico.Domain.Entities.Paciente", "Paciente")
                    .WithMany()
                    .HasForeignKey("PacienteId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Medico");

                b.Navigation("Paciente");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Author", b =>
            {
                b.OwnsOne("SisMedico.Domain.ValueObjects.RedesSociais", "RedesSociais", b1 =>
                    {
                        b1.Property<Guid>("AuthorId")
                            .HasColumnType("uniqueidentifier");

                        b1.Property<string>("Facebook")
                            .HasMaxLength(400)
                            .HasColumnType("varchar(400)")
                            .HasColumnName("Facebook");

                        b1.Property<string>("Linkedin")
                            .HasMaxLength(400)
                            .HasColumnType("varchar(400)")
                            .HasColumnName("Linkedin");

                        b1.Property<string>("Twitter")
                            .HasMaxLength(400)
                            .HasColumnType("varchar(400)")
                            .HasColumnName("Twitter");

                        b1.HasKey("AuthorId");

                        b1.ToTable("Author");

                        b1.WithOwner()
                            .HasForeignKey("AuthorId");
                    });

                b.Navigation("RedesSociais");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Paciente", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.EstadoPaciente", "EstadoPaciente")
                    .WithMany("Paciente")
                    .HasForeignKey("EstadoPacienteId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("EstadoPaciente");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Tags", b =>
            {
                b.HasOne("SisMedico.Domain.Entities.Author", "Author")
                    .WithMany("Tags")
                    .HasForeignKey("AuthorId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Author");
            });

        modelBuilder.Entity("SisMedico.Domain.Farmacia.Entities.Endereco", b =>
            {
                b.HasOne("SisMedico.Domain.Farmacia.Entities.Fornecedor", "Fornecedor")
                    .WithOne("Endereco")
                    .HasForeignKey("SisMedico.Domain.Farmacia.Entities.Endereco", "FornecedorId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Fornecedor");
            });

        modelBuilder.Entity("SisMedico.Domain.Farmacia.Entities.Produto", b =>
            {
                b.HasOne("SisMedico.Domain.Farmacia.Entities.Fornecedor", "Fornecedor")
                    .WithMany("Produtos")
                    .HasForeignKey("FornecedorId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Fornecedor");
            });

        modelBuilder.Entity("SisMedico.Domain.LawyerFolder.LawyerEvent", b =>
            {
                b.HasOne("SisMedico.Domain.LawyerFolder.Lawyer", "Lawyer")
                    .WithMany("LawyerEvents")
                    .HasForeignKey("LawyerId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("Lawyer");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.Author", b =>
            {
                b.Navigation("Tags");
            });

        modelBuilder.Entity("SisMedico.Domain.Entities.EstadoPaciente", b =>
            {
                b.Navigation("Paciente");
            });

        modelBuilder.Entity("SisMedico.Domain.Farmacia.Entities.Fornecedor", b =>
            {
                b.Navigation("Endereco");

                b.Navigation("Produtos");
            });

        modelBuilder.Entity("SisMedico.Domain.LawyerFolder.Lawyer", b =>
            {
                b.Navigation("LawyerEvents");
            });
#pragma warning restore 612, 618
    }
}
